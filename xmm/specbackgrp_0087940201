#!/bin/bash

# Wrapper script for XMM ESAS spectral extraction, specific to obsid 0087940201
# Must run on statler (8GB RAM), pn-spectra will segfault with only 4GB RAM
#
# Presupposes that mos-filter and pn-filter have already been run successfully
# to generate *-clean.fits
#
# Aaron Tran
# Oct. 5 2015, modified Oct-Nov 2015


# ------------------------
# Configuration parameters
# ------------------------

if [ "$#" -ne 1 ]
then
    echo "Error: one argument (region label) required, exiting"
    exit 1
fi

RSTEM=$1 # just the region label (src, bkg, etc)
OBSID="0087940201"  # TODO this is not great

RDIR="${XMM_PATH}/regs/${OBSID}"
CALDB="${XMM_PATH}/caldb"

# Exposure/instrument identifiers (mos1S001, mos2S002, pnS003)
# are currently hardcoded.  Could refactor, but hard to justify for n=3.

# ------------------------
# Start of script commands
# ------------------------

# CHANGE OF PLANS (Oct. 19 2015)
# RUN FROM DIRECTORY research/xmm/

cd "${XMM_PATH}/${OBSID}/odf/repro"

# Spectrum extraction
mos-spectra prefix=1S001 caldb=$CALDB \
    region="${RDIR}/reg_mos1S001_${RSTEM}.txt" \
    mask=0 elow=0 ehigh=0 ccd1=1 ccd2=1 ccd3=1 ccd4=1 ccd5=1 ccd6=1 ccd7=1 \
  >& mos-spectra_mos1S001_${RSTEM}.log
mv command.csh mos_spectra_mos1S001_${RSTEM}_cmd.csh

mos-spectra prefix=2S002 caldb=$CALDB \
    region="${RDIR}/reg_mos2S002_${RSTEM}.txt" \
    mask=0 elow=0 ehigh=0 ccd1=1 ccd2=1 ccd3=1 ccd4=1 ccd5=1 ccd6=1 ccd7=1 \
  >& mos-spectra_mos2S002_${RSTEM}.log
mv command.csh mos_spectra_mos2S002_${RSTEM}_cmd.csh

pn-spectra prefix=S003 caldb=$CALDB \
    region="${RDIR}/reg_pnS003_${RSTEM}.txt" \
    mask=0 elow=0 ehigh=0 quad1=1 quad2=1 quad3=1 quad4=1 \
  >& pn-spectra_pnS003_${RSTEM}.log
mv command.csh pn-spectra_pnS003_${RSTEM}_cmd.csh

# Compute QPB
# diag=2 creates more diagnostic output files (.qdp plots)
mos_back prefix=1S001 caldb=$CALDB \
    diag=2 elow=0 ehigh=0 ccd1=1 ccd2=1 ccd3=1 ccd4=1 ccd5=1 ccd6=1 ccd7=1 \
  >& mos_back_mos1S001_${RSTEM}.log

mos_back prefix=2S002 caldb=$CALDB \
    diag=2 elow=0 ehigh=0 ccd1=1 ccd2=1 ccd3=1 ccd4=1 ccd5=1 ccd6=1 ccd7=1 \
  >& mos_back_mos2S002_${RSTEM}.log

pn_back prefix=S003 caldb=$CALDB \
    diag=2 elow=0 ehigh=0 quad1=1 quad2=1 quad3=1 quad4=1 \
  >& pn_back_pnS003_${RSTEM}.log

### Move files to avoid clobbering.
### Currently, just the spectra + soft proton image for proton-scale
mv mos1S001-obj.pi  mos1S001-${RSTEM}.pi 
mv mos1S001-back.pi mos1S001-${RSTEM}-qpb.pi 
mv mos1S001.rmf     mos1S001-${RSTEM}.rmf 
mv mos1S001.arf     mos1S001-${RSTEM}.arf 
mv mos1S001-obj-im-sp-det.fits mos1S001-${RSTEM}-sp.fits 
# MOS2
mv mos2S002-obj.pi  mos2S002-${RSTEM}.pi 
mv mos2S002-back.pi mos2S002-${RSTEM}-qpb.pi 
mv mos2S002.rmf     mos2S002-${RSTEM}.rmf 
mv mos2S002.arf     mos2S002-${RSTEM}.arf 
mv mos2S002-obj-im-sp-det.fits mos2S002-${RSTEM}-sp.fits 
# PN
mv pnS003-obj.pi    pnS003-${RSTEM}.pi 
mv pnS003-obj-os.pi pnS003-${RSTEM}-os.pi
mv pnS003-back.pi   pnS003-${RSTEM}-qpb.pi 
mv pnS003.rmf       pnS003-${RSTEM}.rmf 
mv pnS003.arf       pnS003-${RSTEM}.arf 
mv pnS003-obj-im-sp-det.fits pnS003-${RSTEM}-sp.fits 

# Group the spectra

grppha infile="mos1S001-${RSTEM}.pi" outfile="!mos1S001-${RSTEM}-grp50.pi" \
    comm="chkey BACKFILE mos1S001-${RSTEM}-qpb.pi & \
          chkey RESPFILE mos1S001-${RSTEM}.rmf & \
          chkey ANCRFILE mos1S001-${RSTEM}.arf & \
          group min 50 & exit" \
    chatter=10 \
  >& grppha_mos1S001_${RSTEM}.log

grppha infile="mos2S002-${RSTEM}.pi" outfile="!mos2S002-${RSTEM}-grp50.pi" \
    comm="chkey BACKFILE mos2S002-${RSTEM}-qpb.pi & \
          chkey RESPFILE mos2S002-${RSTEM}.rmf & \
          chkey ANCRFILE mos2S002-${RSTEM}.arf & \
          group min 50 & exit" \
    chatter=10 \
  >& grppha_mos2S002_${RSTEM}.log

grppha infile="pnS003-${RSTEM}.pi" outfile="!pnS003-${RSTEM}-grp50.pi" \
    comm="chkey BACKFILE pnS003-${RSTEM}-qpb.pi & \
          chkey RESPFILE pnS003-${RSTEM}.rmf & \
          chkey ANCRFILE pnS003-${RSTEM}.arf & \
          group min 50 & exit" \
    chatter=10 \
  >& grppha_pnS003_${RSTEM}.log

grppha infile="pnS003-${RSTEM}-os.pi" outfile="!pnS003-${RSTEM}-os-grp50.pi" \
    comm="chkey BACKFILE pnS003-${RSTEM}-qpb.pi & \
          chkey RESPFILE pnS003-${RSTEM}.rmf & \
          chkey ANCRFILE pnS003-${RSTEM}.arf & \
          group min 50 & exit" \
    chatter=10 \
  >& grppha_pnS003_${RSTEM}.log
