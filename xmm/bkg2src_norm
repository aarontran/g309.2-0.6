#!/bin/bash

# Must run after sourcing sasinit (just to get ftools)

#if [ "$#" -ne 1 ]
#then
#    echo "Error: one argument (obsid) required, exiting"
#    exit 1
#fi

obsids="0087940201 0551000201"
exps="mos1S001 mos2S002 pnS003"
# NOTE: 0087940201 mos1S001 must be the first value

fiducial_backscal=""
fid_label=""

for obsid in $obsids; do
  for exp in $exps; do

    if [[ "$obsid" == "0551000201" && "$exp" =~ "pn" ]]; then
      echo "Skipping ${obsid} ${exp}"
      continue
    fi
    echo "${obsid} ${exp} BACKSCAL calculation"

    fkeypar "${obsid}/odf/repro/${exp}-src-grp50.pi" BACKSCAL
    SRC_BACKSCAL="$(pget fkeypar value)"
    fkeypar "${obsid}/odf/repro/${exp}-bkg-grp50.pi" BACKSCAL
    BKG_BACKSCAL="$(pget fkeypar value)"

    if [[ "$fiducial_backscal" == "" ]]; then
      fiducial_backscal="$SRC_BACKSCAL"
      fid_label="${obsid} ${exp} src"
    fi

    src_scaled=$(perl -e "print ${SRC_BACKSCAL} / ${fiducial_backscal} ;")
    bkg_scaled=$(perl -e "print ${BKG_BACKSCAL} / ${fiducial_backscal} ;")

    echo "src: $SRC_BACKSCAL (src/(${fid_label}) = $src_scaled)"
    echo "bkg: $BKG_BACKSCAL (bkg/(${fid_label}) = $bkg_scaled)"
    # For some reason, bc -l doesn't work, didn't figure out why
    # NORM=$(echo "($SRC_BACKSCAL) / ($BKG_BACKSCAL)" | bc -l)
    NORM=$(perl -e "print( ($SRC_BACKSCAL) / ($BKG_BACKSCAL) );")
    echo "src/bkg = $NORM"
    echo ""


  done
done

