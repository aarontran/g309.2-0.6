
# (!!!) Currently not in use (!!!)
# use tcsh/bash scripts chainfilter and specbackgrp instead.

# Must run AFTER sourcing sasinit for this project.
# Must run on statler or other machines (not treble)
# with sufficient RAM, 8GB seems to be enough.

OBSID = 0087940201
REV = 0315
#OBSID = 0551000201
#REV = 1692

# This may vary for different datasets
# but conveniently is same for both of our obsids
MOSPRF = 1S001 2S002
PNPRF = S003

RSTEM = 

# Regions stems being considered...
REGS = $(basename $(notdir $(wildcard $(XMM_PATH)/regs/*.reg)))

MOSREGS = $(foreach prf, $(MOSPRF), \
		$(foreach regstm, $(REGS), reg_mos$(prf)_$(regstm).txt))

PNREGS = $(foreach prf, $(PNPRF), \
		$(foreach regstm, $(REGS), reg_pn$(prf)_$(regstm).txt))

# Expected outputs
#MOSREGS = $(wildcard $(XMM_PATH)/regs/$(OBSID)/reg_mos*.txt)
#PNREGS = $(wildcard $(XMM_PATH)/regs/$(OBSID)/reg_pn*.txt)

# Key assumption: region files
#   regs/src.reg
# are used to derive
#   regs/0087940201/reg_mos1S001_src.txt
#   regs/0087940201/reg_mos2S002_src.txt
#   regs/0087940201/reg_pnS003_src.txt
# for any obsid, for any "src".
# Mainly, the filenames MUST match up nicely.

# Some dependencies generated by Makefile in $XMM_PATH
INIT = ccf.cif $(REV)_$(OBSID)_SCX00000SUM.SAS
CALDB = $(XMM_PATH)/caldb
CALDBF = $(XMM_PATH)/caldb/mos1-diag.rsp \
	$(XMM_PATH)/caldb/mos2-diag.rsp \
	$(XMM_PATH)/caldb/pn-diag.rsp

# --------------------------
# End of configuration stuff
# --------------------------

.PHONY : fiddle
fiddle : 
	@echo $(MOSREGS)
	@echo $(PNREGS)

.PHONY : all

# mos1S001-obj-src-grp.pi
# mos1S001-obj-bkg-grp.pi
# mos2S002-obj-src-grp.pi
# mos2S002-obj-bkg-grp.pi
# pnS003-obj-src-grp.pi
# pnS003-obj-bkg-grp.pi


# Compute QPB for source region
# TODO This depends on a slew of files from mos-spectra
# which I have not specified in the dependencies here!!
# using -obj-src.pi spectrum as "evidence" of successful script build
mos%-back-src.pi : mos%-obj-src.pi

pn%-back-src.pi pn%-obj-os-src.pi : pn%-obj-src.pi

# Spectrum extraction, source region
# We must run mos/pn_back immediately, the rename files right away
# to avoid clobbering spectra, when the scripts are run for the background
# regions or multiple regions (if doing spatially-resolved analysis).
MOS_SPEC_OBJ = mos%-obj-src.pi mos%-src.rmf mos%-src.arf mos%-back-src.pi

# Tricky problem, I want to be able to wildcard on two expressions:
# 1. 1S001 (or 2S002), and
# 2. 1S001_src (or 1S001_bkg)
# the dependency on mos%-clean.fits is a little tricky to handle.

# Maybe it's time to surrender and admit I should just be using a shell script.
# What if I change my target names to make this shit work?...

mos1S001_src-obj.pi
mos1S001_src.rmf
mos1S001_src.arf
mos1S001_src-qpb.pi

$(XMM_PATH)/regs/$(OBSID)/reg_%.txt : $(XMM_PATH)/regs/{stem}.txt
	# something something recipe to convert
	# DS9 coordinates to XMM DET coordinates using FITS file.

mos%-obj.pi mos%.rmf mos%.arf mos%-qpb.pi : $(XMM_PATH)/regs/$(OBSID)/reg_%.txt \
    	mos%-clean.fits

$(MOS_SPEC_OBJ) : reg_mos%_src.txt mos%-clean.fits $(CALDBF)
	mos-spectra prefix=$* caldb=$(CALDB) region=$< \
		mask=0 elow=0 ehigh=0 \
		ccd1=1 ccd2=1 ccd3=1 ccd4=1 ccd5=1 ccd6=1 ccd7=1 \
	    >& mos-spectra_$*_src.log
	mv command.csh mos-spectra_mos$*_src_cmd.csh
	mos_back prefix=% caldb=$(CALDB) \
		diag=2 elow=0 ehigh=0 \
		ccd1=1 ccd2=1 ccd3=1 ccd4=1 ccd5=1 ccd6=1 ccd7=1 \
	    >& mos_back_%_src.log
	mv mos$*-obj.pi  mos$*-obj-src.pi 
	mv mos$*-back.pi mos$*-qpb-src.pi 
	mv mos$*.rmf     mos$*-src.rmf 
	mv mos$*.arf     mos$*-src.arf 
	mv mos$*-obj-im-sp-det.fits mos$*-sp-src.fits 

PN_SPEC_OBJ = pn%-obj-src.pi pn%-src.rmf pn%-src.arf \
	pn%-back-src.pi pn%-obj-os-src.pi

$(PN_SPEC_OBJ) : reg_pn%_src.txt pn%-clean.fits $(CALDBF)
	pn-spectra prefix=$* caldb=$(CALDB) region=$< \
	    	mask=0 elow=0 ehigh=0 \
	    	quad1=1 quad2=1 quad3=1 quad4=1 \
	    >& pn-spectra_$*_src.log
	mv command.csh pn-spectra_pn$*_src_cmd.csh
	pn_back prefix=% caldb=$(CALDB) \
		diag=2 elow=0 ehigh=0 quad1=1 quad2=1 quad3=1 quad4=1 \
	    >& pn_back_%_src.log
	mv pn$*-obj.pi  pn$*-obj-src.pi 
	mv pn$*-back.pi pn$*-qpb-src.pi 
	mv pn$*.rmf     pn$*-src.rmf 
	mv pn$*.arf     pn$*-src.arf 
	mv pn$*-obj-im-sp-det.fits pn$*-sp-src.fits 
	mv pn$*-obj-os.pi          pn$*-obj-os-src.pi


# Point source removal, special treatment for PN readout streaks
# any additional PATTERN / FLAG filtering (on top of what's already done in
# mos-filter and pn-filter) goes here.

# Don't forget to change subsequent dependencies on mos/pn%-clean.fits


# Good time filtering (remove flares w/ histogram method)
# Undo Snowden's renaming (* -ori.fits) so dependencies resolve correctly

mos%-clean.fits : P$(OBSID)M%MIEVLI0000.FIT
	mos-filter >& mos-filter.log
	mv command.csh mos-filter_cmd.csh
	mv mos$*-ori.fits $<
	ln -s $< mos$*-ori.fits

pn%-clean.fits : P$(OBSID)PN%PIEVLI0000.FIT P$(OBSID)PN%OOEVLI0000.FIT
	pn-filter >& pn-filter.log
	mv pn$*-ori.fits $<
	ln -s $< pn$*-ori.fits

# Generate event lists

P$(OBSID)M%MIEVLI0000.FIT : $(INIT)
	emchain >& emchain.log
#	touch P$(OBSID)M1S001MIEVLI0000.FIT
#	touch P$(OBSID)M2S002MIEVLI0000.FIT

# Mode (imaging, PIEVLI) hard-coded in filenames, may change for other cases.
P$(OBSID)PN%PIEVLI0000.FIT : $(INIT) P$(OBSID)PN%OOEVLI0000.FIT
	epchain >& epchain.log
#	touch P$(OBSID)PNS003PIEVLI0000.FIT

P$(OBSID)PN%OOEVLI0000.FIT : $(INIT)
	epchain withoutoftime=true >& epchain_oot.log
#	touch P$(OBSID)PNS003OOEVLI0000.FIT

