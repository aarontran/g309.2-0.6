#!/bin/tcsh -f

# Standard event list pipeline for 0087940201 and 0551000201 EPIC exposures
# Must run on computer w/ >8 GB RAM, else {mos,pn}-filter (espfilt) will fail.
# Aaron Tran

# ------------------------
# Configuration parameters
# ------------------------

# Good for both 0087940201, 0551000201
set EXPS = "mos1S001 mos2S002 pnS003"
set PNEXP = "pnS003"
set MOSEXP_N = "1S001 2S002"
set PNEXP_N = "S003"

# Additional manual GTI cuts, if espfilt cuts are not sufficient
if ($SAS_OBSID == "0087940201") then
    # Cut first ~10ks of observation (both MOS and PN)
    set GTIFILT_MOS = "(TIME >= 115364540)"
    set GTIFILT_PN  = "(TIME >= 115364540)"
else if ($SAS_OBSID == "0551000201") then
    # Cut interval 19.5-32ks (0551000201 MOS)
    set GTIFILT_MOS = "!(TIME IN [352743736:352756237 ])"
    # Cut after ~30ks of observation (0551000201 PN)
    set GTIFILT_PN = "(TIME < 352755947)"
endif

# ----------------
# Start processing
# ----------------

cd $SAS_REPRO

# Generate event lists
echo "Running e{p,m}chain..."
if ($SAS_OBSID == "0087940201") then
    epchain withoutoftime=true >& epchain_oot.log
    epchain >& epchain.log  # cannot use epreject for 0087940201
else if ($SAS_OBSID == "0551000201") then
    epchain withoutoftime=true runepreject=Y sigma=5 >& epchain_oot.log
    epchain runepreject=Y sigma=5 >& epchain.log
endif

emchain >& emchain.log

# Good time filtering (remove flares)
echo "Running {mos,pn}-filter..."
mos-filter >& mos-filter.log
mv command.csh mos-filter_cmd.csh
pn-filter >& pn-filter.log

foreach exp ($EXPS)

    # WARNING: this conditional structure only allows for ONE PN exposure.
    # may need to change if adapting to other obsids
    if ($exp != $PNEXP) then
        set gtifilt = "$GTIFILT_MOS"
        set pattfilt = "(PATTERN<=12)"
    else
        set gtifilt = "$GTIFILT_PN"
        set pattfilt = "(PATTERN<=4)"
    endif

    # Move -gti.{fits,txt} in case any ESAS tasks surreptitiously use these
    # files, as they're not valid after our manual GTI editing
    mv ${exp}-clean.fits ${exp}-clean-ori.fits
    mv ${exp}-gti.fits   ${exp}-gti-ori.fits
    mv ${exp}-gti.txt    ${exp}-gti-ori.txt
    if ($exp == $PNEXP) then
        mv ${exp}-clean-oot.fits ${exp}-clean-oot-ori.fits
        mv ${exp}-gti-oot.fits   ${exp}-gti-oot-ori.fits
        mv ${exp}-gti-oot.txt    ${exp}-gti-oot-ori.txt
    endif

    evselect table="${exp}-clean-ori.fits" filteredset="${exp}-clean.fits" \
        expression="${gtifilt}" updateexposure=yes filterexposure=yes \
        keepfilteroutput=yes withfilteredset=yes filtertype=expression 
    if ($exp == $PNEXP) then
        evselect table="${exp}-clean-oot-ori.fits" filteredset="${exp}-clean-oot.fits" \
            expression="${gtifilt}" updateexposure=yes filterexposure=yes \
            keepfilteroutput=yes withfilteredset=yes filtertype=expression 
    endif

    # Create light curves to verify manual time cuts.
    # Compare 1. event list w/ no GTI filter, 2. event list after espfilt,
    # 3. event list after espfilt + manual cuts.
    # ${exp}-ori-lc.fits is the same as ${exp}-rate.fits, but with coarser binning
    #
    # Match filtering params for ${exp}-rate.fits from espfilt
    # 0x766a0f63 is used for obsids before XMM revolution 2383 in espfilt and {mos,pn}-filter
    # 0xfb0000 is used in espfilt to create FOV lightcurves; this removes out
    # of FOV events and obviously bad events (cosmic rays, bad pixels, etc)
    evselect table="${exp}-ori.fits" \
        expression="${pattfilt}&&(PI in [2500:12000])&&((FLAG & 0xfb0000) == 0)&&((FLAG & 0x766a0f63)==0)" \
        withrateset=yes rateset="${exp}-ori-lc.fits" \
        maketimecolumn=yes makeratecolumn=yes timecolumn='TIME' timebinsize=50 \
        keepfilteroutput=no
    evselect table="${exp}-clean-ori.fits" \
        expression="(PI in [2500:12000])&&((FLAG & 0xfb0000) == 0)" \
        withrateset=yes rateset="${exp}-clean-ori-lc.fits" \
        maketimecolumn=yes makeratecolumn=yes timecolumn='TIME' timebinsize=50 \
        keepfilteroutput=no
    evselect table="${exp}-clean.fits" \
        expression="(PI in [2500:12000])&&((FLAG & 0xfb0000) == 0)" \
        withrateset=yes rateset="${exp}-clean-final-lc.fits" \
        maketimecolumn=yes makeratecolumn=yes timecolumn='TIME' timebinsize=50 \
        keepfilteroutput=no
end

# cheese must be run after manual GTI edits
echo "Running cheese..."
cheese prefixm="${MOSEXP_N}" prefixp="${PNEXP_N}" \
    scale=0.25 rate=1.0 dist=40.0 clobber=1 elow=400 ehigh=7200 \
  >& cheese.log
mv command.csh cheese_cmd.csh

