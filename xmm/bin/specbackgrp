#!/bin/bash

# Wrapper script for XMM ESAS spectral extraction
# for obsids 0087940201 and 0551000201
# Run on statler/cooper (8GB RAM), pn-spectra fails with only 4GB RAM on treble
#
# Augments ESAS scripts to extract complete FWC spectra (vs. just individual
# chips), move spectrum files to avoid clobbering in subsequent runs, and
# keyword and group spectra.
#
# Presupposes that mos-filter and pn-filter have already been run successfully
# to generate *-clean.fits


# ---------------------------------------------
# Argument parsing and configuration parameters
# ---------------------------------------------

RSTEM=$1  # region label (src, bkg, etc)
if [[ "$#" -ne 1 ]]; then
  echo "ERROR: one arguments (region label) required"
  exit 1
fi

RDIR="${XMM_PATH}/regs/${SAS_OBSID}"
CALDB="${XMM_PATH}/caldb"

##### TODO elow and ehigh set energy band for IMAGE -- why 0.3-1.25 keV?
##### images currently not used.  may have to rerun if used later.
mask="1"
elow="300"
ehigh="1250"

if [[ "$SAS_OBSID" == "0087940201" ]]; then

  exps=("mos1S001" "mos2S002" "pnS003")
  exps_n=("1S001" "2S002" "S003")
  ccd_strs=("ccd1=1 ccd2=1 ccd3=1 ccd4=1 ccd5=1 ccd6=1 ccd7=1" \
            "ccd1=1 ccd2=1 ccd3=1 ccd4=1 ccd5=1 ccd6=1 ccd7=1" \
            "quad1=1 quad2=1 quad3=1 quad4=1")
  mos_exp_str="mos1S001 mos2S002"  # Kludgey hack for mos merger

elif [[ "$SAS_OBSID" == "0551000201" ]]; then

  exps=("mos1S001" "mos2S002" "pnS003")
  exps_n=("1S001" "2S002" "S003")
  # 0551000201 MOS1 CCD6 = 0 (destroyed), MOS2 CCD5 = 0 (anomalous state)
  ccd_strs=("ccd1=1 ccd2=1 ccd3=1 ccd4=1 ccd5=1 ccd6=0 ccd7=1" \
            "ccd1=1 ccd2=1 ccd3=1 ccd4=1 ccd5=0 ccd6=1 ccd7=1" \
            "quad1=1 quad2=1 quad3=1 quad4=1")
  mos_exp_str="mos1S001 mos2S002"  # Kludgey hack for mos merger
else
  echo "ERROR: unsupported obsid $SAS_OBSID (pipeline not set up)"
  exit 1
fi

# ------------------------
# ESAS spectrum extraction
# ------------------------

cd $SAS_REPRO

echo "Extracting spectra and QPB for $SAS_OBSID, region ${RSTEM}"
start_script="Start specbackgrp: $(date)"
echo $start_script

for ((i=0;i<${#exps[@]};++i)); do

  # Setup
  # -----

  exp="${exps[$i]}"     # mos1S001
  exp_n="${exps_n[$i]}" # 1S001
  ccd_str="${ccd_strs[$i]}" # "ccd1=1 ccd2=1 ... ccd7=1"
  # Do not quote ${ccd_str} in command invocations!

  f_region="${RDIR}/reg_${exp}_${RSTEM}.txt"

  if [[ $exp =~ "mos" ]]; then
    exe_spec="mos-spectra-mod"
    exe_qpb="mos_back"
  elif [[ $exp =~ "pn" ]]; then
    exe_spec="pn-spectra-mod"
    exe_qpb="pn_back"
  else
    echo "ERROR: Got bad exposure string $exp"
    exit 1
  fi

  if [[ "$exp" =~ "pn" ]] && [[ "$SAS_OBSID" == "0551000201" ]]; then
    echo "  Skipping extraction for $SAS_OBSID $exp (no observation corner data)"
    # skip entirely - no point in creating spectra that will not be analyzed
    continue
  fi

  # Extraction
  # ----------

  # NOTE: {mos,pn}-spectra apply (PATTERN<={12,4})&&(FLAG==0)
  # when extracting object spectra (-obj.pi, -obj-oot.pi)
  # FLAG==0 for MOS is stricter than recommended #XMMEA_EM
  #
  # mos*-clean.fits (or, -clean-ori.fits) was filtered with:
  #  '(PATTERN<=12)&&((FLAG & 0x766a0f63)==0)'
  # pn*-clean.fits (or, -clean-ori.fits) was filtered with:
  #  '(PATTERN<= 4)&&((FLAG & 0x766a0f63)==0)'

  echo "  Running ${exe_spec} prefix=${exp_n}..."
  ${exe_spec} prefix=${exp_n} region="${f_region}" caldb="${CALDB}" \
      mask=${mask} elow=${elow} ehigh=${ehigh} ${ccd_str} \
    &> "${exe_spec}_${exp}_${RSTEM}.log"
  mv command.csh "${exe_spec}_${exp}_${RSTEM}_cmd.csh"

  echo "  Running ${exe_qpb} prefix=${exp_n}..."
  ${exe_qpb} prefix=${exp_n} caldb="${CALDB}" diag=2 clobber=1 \
      elow=${elow} ehigh=${ehigh} ${ccd_str} \
    &> "${exe_qpb}_${exp}_${RSTEM}.log"
  # diag=2 creates more diagnostic output files (.qdp plots)

  echo "  Rename output files (map ${exp} to ${exp}-${RSTEM})"

  # Move, keyword, bin
  # ------------------

  # Note: many outputs below are from "-mod" ESAS scripts only:
  mv "${exp}-obj.pi"      "${exp}-${RSTEM}.pi"
  mv "${exp}-back.pi"     "${exp}-${RSTEM}-qpb.pi"
  mv "${exp}.rmf"         "${exp}-${RSTEM}.rmf"
  mv "${exp}.arf"         "${exp}-${RSTEM}.arf"
  mv "${exp}.flatrmf"     "${exp}-${RSTEM}.flatrmf"
  mv "${exp}.flatarf"     "${exp}-${RSTEM}.flatarf"
  mv "${exp}-obj-ff.pi"   "${exp}-${RSTEM}-ff.pi"
  mv "${exp}-ff.arf"      "${exp}-${RSTEM}-ff.arf"
  mv "${exp}-ff.rmf"      "${exp}-${RSTEM}-ff.rmf"
  mv "${exp}-obj-im-sp-det.fits" "${exp}-${RSTEM}-im-sp.fits"

  if [[ "$exp" =~ "pn" ]]; then
    mv "${exp}-obj-oot.pi"    "${exp}-${RSTEM}-oot.pi"
    mv "${exp}-obj-os.pi"     "${exp}-${RSTEM}-os.pi"
    # No OOT subtraction for PN FWC spectra (a lot of code to do this, and not
    # crucial since we're not worried about overall norm)
    mv "${exp}-obj-ff-oot.pi" "${exp}-${RSTEM}-ff-oot.pi"
  fi

  echo "  Set spectra keywords and apply binning"

  os=""
  if [[ "$exp" =~ "pn" ]]; then
    # Use OOT-subtracted spectrum for PN observation spectra
    os="-os"
  fi

  # PN FWC spectra are not OOT-subtracted, so don't use ${os}
  grppha infile="${exp}-${RSTEM}-ff.pi" outfile="!${exp}-${RSTEM}-ff.pi" \
    comm="chkey BACKFILE NONE & \
          chkey RESPFILE ${exp}-${RSTEM}-ff.rmf & \
          chkey ANCRFILE ${exp}-${RSTEM}-ff.arf & \
          exit" \
    &> "grppha_${exp}_${RSTEM}.log"

  grppha infile="${exp}-${RSTEM}${os}.pi" outfile="!${exp}-${RSTEM}${os}.pi" \
      comm="chkey BACKFILE ${exp}-${RSTEM}-qpb.pi & \
            chkey RESPFILE ${exp}-${RSTEM}.rmf & \
            chkey ANCRFILE ${exp}-${RSTEM}.arf & \
            exit" \
    &>> "grppha_${exp}_${RSTEM}.log"
  # First grppha should clobber any existing log

  grppha infile="${exp}-${RSTEM}${os}.pi" outfile="!${exp}-${RSTEM}${os}-grp01.pi" \
      comm="group min 1 & exit" \
    &>> "grppha_${exp}_${RSTEM}.log"

  grppha infile="${exp}-${RSTEM}${os}.pi" outfile="!${exp}-${RSTEM}${os}-grp50.pi" \
      comm="group min 50 & exit" \
    &>> "grppha_${exp}_${RSTEM}.log"

done

# WARNING - do NOT quote $mos_exp_str because this is a kludgey hack
# to feed MOS exposure names as distinct command line args
echo "Merging MOS1, MOS2 spectra (experimental)"
merge_exps.pl "${RSTEM}" $mos_exp_str &> "mosmerge_${RSTEM}.log"

echo "Finished extracting all spectra for $SAS_OBSID region ${RSTEM}!"
echo $start_script
echo "Finished specbackgrp: $(date)"

