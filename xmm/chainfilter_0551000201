#!/bin/tcsh -f

# Standard event list pipeline for 0551000201 MOS1,MOS2,PN imaging exposures
# Must run on computer w/ >8 GB RAM, else {mos,pn}-filter (espfilt) will fail.
# Aaron Tran

# ------------------------
# Configuration parameters
# ------------------------

set OBSID = "0551000201"
set EXPS = "mos1S001 mos2S002 pnS003"
set PNEXP = "pnS003"

set MOSEXP_N = "1S001 2S002"
set PNEXP_N = "S003"

# ------------------------
# Start of script commands
# ------------------------

cd "${XMM_PATH}/${OBSID}/odf/repro"

# Generate event lists
epchain withoutoftime=true runepreject=Y sigma=5 >& epchain_oot.log
epchain runepreject=Y sigma=5 >& epchain.log
emchain >& emchain.log

# Good time filtering (remove flares)
mos-filter >& mos-filter.log
mv command.csh mos-filter_cmd.csh
pn-filter >& pn-filter.log

foreach exp ($EXPS)

    # Generate soft X-ray list/image to compare against run without epreject
    if ($exp == $PNEXP) then
        evselect table="${exp}-ori.fits" filteredset="${exp}-ori_vsoft.fits" \
            expression="(PHA>=20)&&(PI>=120)&&(PI<200)"
        evselect table="${exp}-oot.fits" filteredset="${exp}-oot_vsoft.fits" \
            expression="(PHA>=20)&&(PI>=120)&&(PI<200)"
        evselect table="${exp}-ori_vsoft.fits" withimageset=true \
            imageset="${exp}-ori_vsoft-img.fits" xcolumn=DETX ycolumn=DETY \
            imagebinning=binSize ximagebinsize=100 yimagebinsize=100
        evselect table="${exp}-oot_vsoft.fits" withimageset=true \
            imageset="${exp}-oot_vsoft-img.fits" xcolumn=DETX ycolumn=DETY \
            imagebinning=binSize ximagebinsize=100 yimagebinsize=100
    endif

    # Move -gti.{fits,txt} in case any ESAS tasks surreptitiously use these
    # files, as they're not valid after our manual GTI editing
    mv ${exp}-clean.fits ${exp}-clean-ori.fits
    mv ${exp}-gti.fits   ${exp}-gti-ori.fits
    mv ${exp}-gti.txt    ${exp}-gti-ori.txt
    if ($exp == $PNEXP) then
        mv ${exp}-clean-oot.fits ${exp}-clean-oot-ori.fits
        mv ${exp}-gti-oot.fits   ${exp}-gti-oot-ori.fits
        mv ${exp}-gti-oot.txt    ${exp}-gti-oot-ori.txt
    endif

    if ($exp != $PNEXP) then
        # Cut events between 19.5-32ks (0551000201 MOS)
        set gtifilt = "!(TIME IN [352743736:352756237 ])"
    else
        # Cut events after ~30ks of observation (0551000201 PN)
        set gtifilt = "(TIME < 352755947)"
    endif
    evselect table="${exp}-clean-ori.fits" filteredset="${exp}-clean2.fits" \
        expression="${gtifilt}" \
        updateexposure=yes filterexposure=yes \
        keepfilteroutput=yes withfilteredset=yes filtertype=expression 

    # Light curves to check that manual time cuts were applied successfully
    # Match filtering params for ${exp}-rate.fits from espfilt
    if ($exp != $PNEXP) then
        set pattfilt = "(PATTERN<=12)"
    else
        set pattfilt = "(PATTERN<=4)"
    endif
    # ${exp}-ori-lc.fits is the same as ${exp}-rate.fits, but with coarser binning
    evselect table="${exp}-ori.fits" \
        expression="${pattfilt}&&(PI in [2500:12000])&&((FLAG & 0xfb0000) == 0)&&((FLAG & 0x766a0f63)==0)" \
        withrateset=yes rateset="${exp}-ori-lc.fits" \
        maketimecolumn=yes makeratecolumn=yes timecolumn='TIME' timebinsize=50 \
        keepfilteroutput=no
    evselect table="${exp}-clean-ori.fits" \
        expression="(PI in [2500:12000])&&((FLAG & 0xfb0000) == 0)" \
        withrateset=yes rateset="${exp}-clean-ori-lc.fits" \
        maketimecolumn=yes makeratecolumn=yes timecolumn='TIME' timebinsize=50 \
        keepfilteroutput=no
    evselect table="${exp}-clean2.fits" \
        expression="(PI in [2500:12000])&&((FLAG & 0xfb0000) == 0)" \
        withrateset=yes rateset="${exp}-clean-final-lc.fits" \
        maketimecolumn=yes makeratecolumn=yes timecolumn='TIME' timebinsize=50 \
        keepfilteroutput=no
    # 0x766a0f63 is used for obsids before XMM revolution 2383 in espfilt and {mos,pn}-filter
    # 0xfb0000 is used in espfilt to create FOV lightcurves; this removes out
    # of FOV events and obviously bad events (cosmic rays, bad pixels, etc)

    # Final manual filtering
    # mos{1S001,2S002}-clean-ori.fits were already filtered by:
    #  '(PATTERN<=12)&&((FLAG & 0x766a0f63)==0)'
    # pnS003-clean-ori.fits was already filtered by:
    #  '(PATTERN<= 4)&&((FLAG & 0x766a0f63)==0)'
    # Nevertheless re-specify PATTERN to be quite explicit.
    # Note that FLAG filtering may be overly restrictive for images
    # Allow FLAG==0x10000 (corners) for mos/pn-spectra
    if ($exp != $PNEXP) then
        set finalfilt = "(PATTERN<=12)&&(#XMMEA_EM||(FLAG==0x10000))"
    else
        set finalfilt = "(PATTERN<=4)&&((FLAG==0)||(FLAG==0x10000))"
    endif
    evselect table=${exp}-clean2.fits filteredset=${exp}-clean.fits \
        expression="${finalfilt}" \
        updateexposure=no filterexposure=no \
        keepfilteroutput=yes withfilteredset=yes filtertype=expression

    # Final manual filtering, but remove out-of-FOV events
    if ($exp != $PNEXP) then
        set finalfilt = "(PATTERN<=12)&&(#XMMEA_EM)"
    else
        set finalfilt = "(PATTERN<=4)&&((FLAG==0))"
    endif
    evselect table=${exp}-clean2.fits filteredset=${exp}-clean-fov.fits \
        expression="${finalfilt}" \
        updateexposure=no filterexposure=no \
        keepfilteroutput=yes withfilteredset=yes filtertype=expression
end


# cheese must be run after manual GTI edits; probably benefits from running
# after additional FLAG filter step
cheese prefixm="${MOSEXP_N}" prefixp="${PNEXP_N}" \
    scale=0.5 rate=2.0 dist=40.0 clobber=1 elow=400 ehigh=7200
mv command.csh cheese_cmd.csh
mv emllist.fits cheese_emllist.fits

